package ar.edu.um.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReminderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReminderAllPropertiesEquals(Reminder expected, Reminder actual) {
        assertReminderAutoGeneratedPropertiesEquals(expected, actual);
        assertReminderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReminderAllUpdatablePropertiesEquals(Reminder expected, Reminder actual) {
        assertReminderUpdatableFieldsEquals(expected, actual);
        assertReminderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReminderAutoGeneratedPropertiesEquals(Reminder expected, Reminder actual) {
        assertThat(actual)
            .as("Verify Reminder auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReminderUpdatableFieldsEquals(Reminder expected, Reminder actual) {
        assertThat(actual)
            .as("Verify Reminder relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getDueDate()).as("check dueDate").isEqualTo(expected.getDueDate()))
            .satisfies(a -> assertThat(a.getCompleted()).as("check completed").isEqualTo(expected.getCompleted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReminderUpdatableRelationshipsEquals(Reminder expected, Reminder actual) {
        assertThat(actual)
            .as("Verify Reminder relationships")
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()));
    }
}
