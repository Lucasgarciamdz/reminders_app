version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: reminders
      POSTGRES_USER: reminders
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reminders-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reminders"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - reminders-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=a7a6311933d3503b89bc2dbc36572c33a6c10925682e591bffcab6911c06786d
    ports:
      - "5601:5601"
    networks:
      - reminders-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - XPACK_MONITORING_ENABLED=false
    ports:
      - "5044:5044"  # Beats input
      - "9600:9600"  # API
      - "5000:5000"  # TCP input
      - "5001:5001"  # UDP input
    volumes:
      - ./elk/logstash/config:/usr/share/logstash/config:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - logstash_data:/usr/share/logstash/data
    networks:
      - reminders-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Application
  backend:
    image: your-dockerhub-username/reminders-backend:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/reminders
      - SPRING_DATASOURCE_USERNAME=reminders
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_healthy
    networks:
      - reminders-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,environment"
    labels:
      - "service=backend"
      - "environment=production"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/management/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - production

  # Frontend Application
  frontend:
    image: your-dockerhub-username/reminders-frontend:latest
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - reminders-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,environment"
    labels:
      - "service=frontend"
      - "environment=production"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - production

volumes:
  postgres_data:
  elasticsearch_data:
  logstash_data:

networks:
  reminders-network:
    driver: bridge